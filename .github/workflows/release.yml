name: Release
on:
  push:
    branches:
    - master
    - develop
jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Setup Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Get Version Number
      uses: einaregilsson/build-number@v1
      with:
        token: ${{secrets.github_token}}
      if: github.ref == 'refs/heads/develop'

    - name: Set Version Number
      shell: bash
      run : |
        sed -i 's/"\(.*\)"/"\1b'"${BUILD_NUMBER}"'"/' llyfrau/_version.py
        cat llyfrau/_version.py
      if: github.ref == 'refs/heads/develop'

    - name: Package
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
        tox -e pkg

    - name: Export release assets
      id: pkg
      run: |
        whl=$(find dist/ -name '*.whl' -exec basename {} \;)
        echo "::set-output name=WHL::$whl"
        src=$(find dist/ -name '*.tar.gz' -exec basename {} \;)
        echo "::set-output name=SRC::$src"

    - name: Export release info
      id: info
      run: |
        version=$(sed 's/.*"\(.*\)".*/\1/' llyfrau/_version.py)
        release_date=$(date +%Y-%m-%d)
        echo "::set-env name=VERSION::$version"
        echo "::set-output name=VERSION::$version"
        echo "::set-env name=RELEASE_DATE::$release_date"
        echo "::set-output name=RELEASE_DATE::$release_date"

    - name: Tag Release
      run: |
        commit=$(git rev-parse HEAD)
        # POST a new ref to repo via Github API
        curl -s -X POST https://api.github.com/repos/${{ github.repository }}/git/refs \
        -H "Authorization: token $GITHUB_TOKEN" \
        -d @- << EOF
        {
          "ref": "refs/tags/v$VERSION",
          "sha": "$commit"
        }
        EOF
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.info.outputs.VERSION }}
        release_name: V${{ steps.info.outputs.VERSION}} - ${{ steps.info.outputs.RELEASE_DATE }}
        draft: false
        prerelease: ${{ github.ref == 'refs/heads/develop' }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: dist/${{ steps.pkg.outputs.WHL }}
        asset_name: ${{ steps.pkg.outputs.WHL }}
        asset_content_type: application/octet-stream

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: dist/${{ steps.pkg.outputs.SRC }}
        asset_name: ${{ steps.pkg.outputs.SRC }}
        asset_content_type: application/octet-stream

    - name: Publish to PyPi
      run: |
        python -m pip install twine
        twine upload dist/* -u alcarney -p ${{ secrets.PYPI_PASS }}
